seq(1,20)
seq(0, 10, by=0.5)
my_seq<-seq(5, 10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10,  6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <-c(my_char,"Yury")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X", "Y", "Z"))
paste(1:3,c("X", "Y", "Z"),sep = "")
paste(LETTERS, 1:4, sep = "-")
x<- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(cet, vect2)
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:10)
my_vector <-1:10
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
sttribute(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data )
cnames <- c("patient", "age","weight", "bp", "rating", "test")
colnames(cnames,my_data)
?colnames
colnames(my_data)<- cnames
my_data
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals,length)
unique_vals <- sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <-sample(c(0,1),100,prob = c(0.3, 0.7))
flips <-sample(c(0,1),100,replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(100, size=1, prob = 0.7)
flips2
sim(flips2)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,c(10))
rpois(5, 10)
my_pois<-replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d1 <- as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
?plot
plot(x = cars$speed, y = cars$dist, xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
?plot
plot(cars,main="My Plot")
?plot
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim = c(10, 15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl , data = mtcars)
hist(mtcars$mpg)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key="8239bc81ec712db5abe6", secret="82cd1c61c1cc767d6a54a67d67cb0163b2805a49")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
sig=sign_oauth1.0(myapp,, key="8239bc81ec712db5abe6", secret="82cd1c61c1cc767d6a54a67d67cb0163b2805a49")
req <- GET("https://api.github.com/users/jtleek/repos", sig)
content(req)
req2 <- GET("https://api.github.com/users/jtleek/repos", sig)
content(req2)
library(httr)
myapp <- oauth_app("github", key="8239bc81ec712db5abe6", secret="82cd1c61c1cc767d6a54a67d67cb0163b2805a49")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("H:/githome/3datacleaning/getdata012courseproject")
?colsplit
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
train_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
features <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE, strip.white=TRUE, sep=" ",header = FALSE)
feature_labels<-features[,2]
?mutate
library(dplyr)
?mutate
?colsplit
library(reshape2)
test_data<- colsplit(test_data[,1]," ",feature_labels)
train_data<- colsplit(train_data[,1]," ",feature_labels)
library(dplyr)
test_data <- tbl_df(test_data)
test_data
test_data<-mutate(test_data,source="test set")
names(test_data)
i<-match("source",names(test_data))
i
mutate(test_data,source="test set")
cbind(test_data,"test set")
test_data
mutate(test_data,source_file="test set")
test_data[1,]
duplicated(names(test_data))
names(test_data)
feature_labels
t<-select(test_data,contains("mean()"))
features <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE, strip.white=TRUE, header = FALSE)
colsplit(features[,1]," ")
colsplit(features[,1]," ",c("id","label"))
t<-colsplit(features[,1]," ",c("id","label"))
select(t,label)
t<-colsplit(features[,1]," ",c("id","label"))
dim(t)
features <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE, strip.white=TRUE, header = FALSE)
dim(features)
test_data<- colsplit(test_data[,1]," ",features)
test_data<- colsplit(test_data[,1]," ",features[,1])
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<- colsplit(test_data[,1]," ",features[,1])
test_data <- tbl_df(test_data)
test_data<-mutate(test_data,source="test set")
?select
?make.names
make.names(features[,1], unique=TRUE, allow_ = TRUE)
?match
features <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE, strip.white=TRUE, sep=" ",header = FALSE)
feature_labels<-features[,2]
match(feature_labels,"mean()")
match(feature_labels,"mean")
feature_labels
match(feature_labels,"mean.*")
match(feature_labels,".*mean.*")
match(feature_labels,"*mean*")
charmatch("med", c("mean", "median", "mode"))
charmatch("me", c("mean", "median", "mode"))
match("me", c("mean", "median", "mode"))
match("me*", c("mean", "median", "mode"))
match("me.", c("mean", "median", "mode"))
match("me.*", c("mean", "median", "mode"))
?gsub
x<-c()
y<-c("mean", "median", "mode")
for (i in seq_along(y)){if(grepl(y[i], "me")) x<-c(x,i)}
x
for (i in seq_along(y)){if(grepl("me",y[i])) x<-c(x,i)}
x
for (i in seq_along(y)){if(grepl("me",y[i]) | grepl("od",y[i])) x<-c(x,i)}
x
features <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/features.txt",stringsAsFactors = FALSE, strip.white=TRUE, sep=" ",header = FALSE)
feature_labels<-features[,2]
x<-c()
for (i in seq_along(feature_labels)){if(grepl("mean()",feature_labels[i]) | grepl("std()",feature_labels[i])) x<-c(x,i)}
x
x[c(2,3)]
x[c(7,8)]
features[x]
feature_labels[x]
duplicated(features[x])
duplicated(feature_labels[x])
test_data
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<- colsplit(test_data[,1]," ",feature_labels)
test_data <- tbl_df(test_data)
select(test_data,feature_labels[x])
select(test_data,x)
valid_column_names <- make.names(names=feature_labels, unique=TRUE, allow_ = TRUE)
head(valid_column_names)
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<- colsplit(test_data[,1]," ",valid_column_names)
test_data <- tbl_df(test_data)
test_data<-mutate(test_data,source="test set")
test_data<-select(test_data,contains("mean..") | contains("sdt.."))
?select
test_data<-select(test_data,contains("mean.."), contains("sdt.."))
test_data
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
train_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
t<rbind(test_data,train_data)
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
train_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<- colsplit(test_data[,1]," ",valid_column_names)
train_data<- colsplit(train_data[,1]," ",valid_column_names)
full_data<-rbind(test_data,train_data)
full_data_subset<-select(full_data,contains("mean.."), contains("sdt.."))
dim(full_data_subset
)
head(full_data_subset,2)
test_data<-cbind(subjectId=test_subjects[,1],test_data)
test_subjects<-read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<-cbind(subjectId=test_subjects[,1],test_data)
test_data[1,]
test_activities<-read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/y_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<-cbind(activityId=test_subjects[,1],test_data)
train_subjects<-read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
train_data<-cbind(subjectId=train_subjects[,1],train_data)
train_activities<-read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/train/y_train.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
train_data<-cbind(activityId=train_subjects[,1],train_data)
ull_data<-rbind(test_data,train_data)
ull_data[2,]
full_data_subset<-select(ull_data,subjectId,activityId, contains("mean.."), contains("sdt.."))
full_data_subset[2,]
full_data_subset <- tbl_df(full_data_subset)
full_data_subset
activities <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",stringsAsFactors = FALSE, strip.white=TRUE, sep=" ",header = FALSE)
activity_labels<-activities[,2]
activity_labels
activity_labels[1]
activity_labels[5]
full_data_subset<-mutate(full_data_subset,activityId=activity_labels[activityId])
full_data_subset
?group_by
group_by(full_data_subset,subjectId)
summarise(group_by(full_data_subset,subjectId), mean(tBodyAcc.mean...X))
summarise(group_by(full_data_subset,subjectId), mean())
colMeans(group_by(full_data_subset,subjectId))
summarise(group_by(full_data_subset,subjectId), n = n())
summarise(group_by(full_data_subset,subjectId), n = sum()/n())
by_subject_activity <- group_by(full_data_subset, subjectId, activityId)
by_subject_activity
? summarize
?summarize
x<-summarize(by_subject_activity,mean(tBodyAcc.mean...X))
x
is.na(test_activities)
as.Numeral(is.na(test_activities))
as.numeral(is.na(test_activities))
as.numeric(is.na(test_activities))
sum(as.numeric(is.na(test_activities)))
sum(as.numeric(is.na(trains_activities)))
sum(as.numeric(is.na(train_activities)))
summarize(by_subject_activity,mean(tBodyAcc.mean...X))
names(full_data_set)
names(full_data_subset)
names(full_data_subset)
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=-c("subjectId","activityId"))
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[3:])
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[3:36])
m
dcast(m, var1~variable, mean)
dcast(m, subjectId~variable, mean)
s<-split(full_data_subset$subjectId)
?dcast
?melt
m<-melt(full_data_subset, id=c("subjectId","activityId"), na.rm=TRUE
)
m
m<-melt(full_data_subset, id=c("subjectId","activityId"))
?dcast
dcast(m,subjectId~activityId, mean)
full_data_subset
dcast(m,  tBodyAcc.mean...X~tGravityAcc.mean...X, mean)
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[3:36])
dcast(m,  tBodyAcc.mean...X~tGravityAcc.mean...X, mean)
dcast(m,  tBodyAcc~tGravity, mean)
names(full_data_subset)[3:36]
dcast(m,  tBodyAcc.mean...X~variable, mean)
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[3:36])
dim(m)
m[1,]
m[2,]
dcast(m,  tBodyAcc.mean...X~variable, mean)
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[3:36])
dcast(m,  tBodyAcc.mean...X~variable, mean)
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[2:36])
dcast(m,  tBodyAcc.mean...X~variable, mean)
dcast(m,  subjectId+activityId~variable, mean)
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[2:length(names(full_data_subset))])
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<- colsplit(test_data[,1]," ",valid_column_names)
test_data<-cbind(subjectId=test_subjects[,1],test_data)
test_data<-cbind(activityId=test_activities[,1],test_data)
full_data_subset<-select(test_data,subjectId,activityId, contains("mean.."), contains("sdt.."))
full_data_subset <- tbl_df(full_data_subset)
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[2:length(names(full_data_subset))])
dcast(m,  subjectId+activityId~variable, mean)
s<-dcast(m,  subjectId+activityId~variable, mean)
s
full_data_subset
is.na(full_data_subset[,2])
as.numeric(is.na(full_data_subset[,2]))
sum(as.numeric(is.na(full_data_subset[,2])))
sum(as.numeric(is.na(full_data_subset[,3])))
sum(as.numeric(is.na(full_data_subset[,4])))
sum(as.numeric(is.na(full_data_subset[,5])))
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<- colsplit(test_data[,1]," ",valid_column_names)
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE,sep=" ")
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
test_data<- colsplit(test_data[,1]," ",valid_column_names)
test_data1 <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE,sep=" ")
sum(as.numeric(is.na(test_data[,4])))
sum(as.numeric(is.na(test_data1[,4])))
length(test_data1[1,])
length(test_data1[2,])
length(test_data1[3,])
length(test_data[3,])
length(test_data[30,])
is.na(test_data[,4])
is.na(test_data[120,4])
test_data <- read.csv("cp-getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt",stringsAsFactors = FALSE, strip.white=TRUE,header = FALSE)
t <- strsplit(test_data[120,1], " +")
t
is.na(t)
test_data<- colsplit(test_data[,1]," +",valid_column_names)
is.na(test_data[120,4])
sum(as.numeric(is.na(test_data1[,4])))
sum(as.numeric(is.na(test_data[,4])))
source("run_analysis.R")
m
dcast(m,  subjectId+activityId~variable, mean)
full_data_subset
sum(as.numeric(is.na(full_data_subset[,4])))
sum(as.numeric(is.na(full_data_subset[,34])))
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[2:length(names(full_data_subset))])
s<-dcast(m,  subjectId+activityId~variable, mean)
m[1,]
<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[3:length(names(full_data_subset))])
m<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[3:length(names(full_data_subset))])
s<-dcast(m,  subjectId+activityId~variable, mean)
s[1,]
?write.table
melteddata<-melt(full_data_subset, id=c("subjectId","activityId"), measure.vars=names(full_data_subset)[3:length(names(full_data_subset))])
tidy_set<-dcast(melteddata,  subjectId+activityId~variable, mean)
write.table(tidy_set,file="tidy_set_output.txt",row.name=FALSE)
?make.names
x<- names(full_data_subset)
x
gsub("\\.(\\w)","\\U\\1",x[3],perl=TRUE)
y<-gsub("\\.(\\w)","\\U\\1",x[3],perl=TRUE)
z<-gsub("\\.","",y)
z
y<-gsub("\\.(\\w)","\\U\\1",x,perl=TRUE)
y
z<-gsub("\\.","",y)
z
