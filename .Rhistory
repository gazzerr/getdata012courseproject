R.version.string
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrat(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x<-9
play()
ls()
nx()
nxt()
ls()
list.files()
?list.files
args(list.files)
getwd()
old.dir<-getwd()
mkdir("testdir")
?md
?makedir
?make.dir
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2>r")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.info("mytest3.R")
file.path("mytest3.R")
?dir.create
dir.create("testdir2/testdir3",recursive=TRUE)
?dir.remove
?dir.delete
?file.remove
args(file.remove)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq<-seq(5, 10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10,  6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <-c(my_char,"Yury")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X", "Y", "Z"))
paste(1:3,c("X", "Y", "Z"),sep = "")
paste(LETTERS, 1:4, sep = "-")
x<- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(cet, vect2)
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:10)
my_vector <-1:10
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
sttribute(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data )
cnames <- c("patient", "age","weight", "bp", "rating", "test")
colnames(cnames,my_data)
?colnames
colnames(my_data)<- cnames
my_data
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals,length)
unique_vals <- sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <-sample(c(0,1),100,prob = c(0.3, 0.7))
flips <-sample(c(0,1),100,replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(100, size=1, prob = 0.7)
flips2
sim(flips2)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,c(10))
rpois(5, 10)
my_pois<-replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d1 <- as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
?plot
plot(x = cars$speed, y = cars$dist, xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
?plot
plot(cars,main="My Plot")
?plot
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim = c(10, 15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl , data = mtcars)
hist(mtcars$mpg)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key="8239bc81ec712db5abe6", secret="82cd1c61c1cc767d6a54a67d67cb0163b2805a49")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
sig=sign_oauth1.0(myapp,, key="8239bc81ec712db5abe6", secret="82cd1c61c1cc767d6a54a67d67cb0163b2805a49")
req <- GET("https://api.github.com/users/jtleek/repos", sig)
content(req)
req2 <- GET("https://api.github.com/users/jtleek/repos", sig)
content(req2)
library(httr)
myapp <- oauth_app("github", key="8239bc81ec712db5abe6", secret="82cd1c61c1cc767d6a54a67d67cb0163b2805a49")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("H:/githome/3datacleaning/getdata012courseproject")
source("run_analysis.R")
dim(tidy_set)
rename(tidy_set, activityId=activity)
rename(tidy_set, activityId="activity"")
""
rename(tidy_set, activityId="activity")
tidy_set
tidy_set[1,]
rename(tidy_set, activityId=activity)
rename(tidy_set, activity=activityId)
tidy_set[1,]
source("run_analysis.R")
source("run_analysis.R")
